// Code generated by protoc-gen-go. DO NOT EDIT.
// source: resolver.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ObjectType int32

const (
	ObjectType_STRING ObjectType = 0
	ObjectType_NUMBER ObjectType = 1
)

var ObjectType_name = map[int32]string{
	0: "STRING",
	1: "NUMBER",
}

var ObjectType_value = map[string]int32{
	"STRING": 0,
	"NUMBER": 1,
}

func (x ObjectType) String() string {
	return proto.EnumName(ObjectType_name, int32(x))
}

func (ObjectType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f5838971722c666f, []int{0}
}

type ResolveRequest struct {
	Formula              string   `protobuf:"bytes,1,opt,name=formula,proto3" json:"formula,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResolveRequest) Reset()         { *m = ResolveRequest{} }
func (m *ResolveRequest) String() string { return proto.CompactTextString(m) }
func (*ResolveRequest) ProtoMessage()    {}
func (*ResolveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5838971722c666f, []int{0}
}

func (m *ResolveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResolveRequest.Unmarshal(m, b)
}
func (m *ResolveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResolveRequest.Marshal(b, m, deterministic)
}
func (m *ResolveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolveRequest.Merge(m, src)
}
func (m *ResolveRequest) XXX_Size() int {
	return xxx_messageInfo_ResolveRequest.Size(m)
}
func (m *ResolveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResolveRequest proto.InternalMessageInfo

func (m *ResolveRequest) GetFormula() string {
	if m != nil {
		return m.Formula
	}
	return ""
}

type ResolveResponse struct {
	Result               *Object  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResolveResponse) Reset()         { *m = ResolveResponse{} }
func (m *ResolveResponse) String() string { return proto.CompactTextString(m) }
func (*ResolveResponse) ProtoMessage()    {}
func (*ResolveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5838971722c666f, []int{1}
}

func (m *ResolveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResolveResponse.Unmarshal(m, b)
}
func (m *ResolveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResolveResponse.Marshal(b, m, deterministic)
}
func (m *ResolveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolveResponse.Merge(m, src)
}
func (m *ResolveResponse) XXX_Size() int {
	return xxx_messageInfo_ResolveResponse.Size(m)
}
func (m *ResolveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResolveResponse proto.InternalMessageInfo

func (m *ResolveResponse) GetResult() *Object {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *ResolveResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type Object struct {
	Type                 ObjectType `protobuf:"varint,1,opt,name=type,proto3,enum=rpc.ObjectType" json:"type,omitempty"`
	StringValue          string     `protobuf:"bytes,2,opt,name=stringValue,proto3" json:"stringValue,omitempty"`
	NumberValue          float64    `protobuf:"fixed64,3,opt,name=numberValue,proto3" json:"numberValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Object) Reset()         { *m = Object{} }
func (m *Object) String() string { return proto.CompactTextString(m) }
func (*Object) ProtoMessage()    {}
func (*Object) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5838971722c666f, []int{2}
}

func (m *Object) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Object.Unmarshal(m, b)
}
func (m *Object) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Object.Marshal(b, m, deterministic)
}
func (m *Object) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Object.Merge(m, src)
}
func (m *Object) XXX_Size() int {
	return xxx_messageInfo_Object.Size(m)
}
func (m *Object) XXX_DiscardUnknown() {
	xxx_messageInfo_Object.DiscardUnknown(m)
}

var xxx_messageInfo_Object proto.InternalMessageInfo

func (m *Object) GetType() ObjectType {
	if m != nil {
		return m.Type
	}
	return ObjectType_STRING
}

func (m *Object) GetStringValue() string {
	if m != nil {
		return m.StringValue
	}
	return ""
}

func (m *Object) GetNumberValue() float64 {
	if m != nil {
		return m.NumberValue
	}
	return 0
}

func init() {
	proto.RegisterEnum("rpc.ObjectType", ObjectType_name, ObjectType_value)
	proto.RegisterType((*ResolveRequest)(nil), "rpc.ResolveRequest")
	proto.RegisterType((*ResolveResponse)(nil), "rpc.ResolveResponse")
	proto.RegisterType((*Object)(nil), "rpc.Object")
}

func init() { proto.RegisterFile("resolver.proto", fileDescriptor_f5838971722c666f) }

var fileDescriptor_f5838971722c666f = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0xbb, 0x56, 0x53, 0x9d, 0x40, 0x5a, 0xc6, 0x1e, 0x82, 0xa7, 0x90, 0x7a, 0x28, 0x3d,
	0xe4, 0x10, 0xc1, 0x07, 0x28, 0x88, 0x08, 0x5a, 0x61, 0xad, 0xde, 0x9b, 0x30, 0x8a, 0x92, 0x66,
	0xb7, 0xb3, 0xbb, 0x42, 0xdf, 0x5e, 0xba, 0x1b, 0x35, 0xbd, 0xcd, 0xfc, 0xf3, 0xf1, 0xb1, 0xfb,
	0x43, 0xc2, 0x64, 0x54, 0xf3, 0x4d, 0x5c, 0x68, 0x56, 0x56, 0xe1, 0x90, 0x75, 0x9d, 0x2f, 0x20,
	0x91, 0x21, 0x96, 0xb4, 0x73, 0x64, 0x2c, 0xa6, 0x30, 0x7a, 0x57, 0xbc, 0x75, 0xcd, 0x26, 0x15,
	0x99, 0x98, 0x5f, 0xc8, 0xdf, 0x35, 0x7f, 0x84, 0xf1, 0x1f, 0x6b, 0xb4, 0x6a, 0x0d, 0xe1, 0x0c,
	0x22, 0x26, 0xe3, 0x1a, 0xeb, 0xd9, 0xb8, 0x8c, 0x0b, 0xd6, 0x75, 0xf1, 0x5c, 0x7d, 0x51, 0x6d,
	0x65, 0x77, 0xc2, 0x29, 0x9c, 0x11, 0xb3, 0xe2, 0xf4, 0xc4, 0xfb, 0xc2, 0x92, 0xef, 0x20, 0x0a,
	0x1c, 0xce, 0xe0, 0xd4, 0xee, 0x35, 0x79, 0x45, 0x52, 0x8e, 0x7b, 0x8a, 0xf5, 0x5e, 0x93, 0xf4,
	0x47, 0xcc, 0x20, 0x36, 0x96, 0x3f, 0xdb, 0x8f, 0xb7, 0x4d, 0xe3, 0xa8, 0x53, 0xf5, 0xa3, 0x03,
	0xd1, 0xba, 0x6d, 0x45, 0x1c, 0x88, 0x61, 0x26, 0xe6, 0x42, 0xf6, 0xa3, 0xc5, 0x35, 0xc0, 0xbf,
	0x17, 0x01, 0xa2, 0x97, 0xb5, 0x7c, 0x58, 0xdd, 0x4f, 0x06, 0x87, 0x79, 0xf5, 0xfa, 0xb4, 0xbc,
	0x93, 0x13, 0x51, 0x2e, 0xe1, 0xbc, 0xfb, 0x26, 0xe3, 0x2d, 0x8c, 0xba, 0x19, 0x2f, 0xfd, 0xbb,
	0x8e, 0xcb, 0xba, 0x9a, 0x1e, 0x87, 0xa1, 0x95, 0x7c, 0x50, 0x45, 0xbe, 0xe2, 0x9b, 0x9f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x60, 0x01, 0x71, 0x55, 0x74, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ResolverClient is the client API for Resolver service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResolverClient interface {
	Resolve(ctx context.Context, in *ResolveRequest, opts ...grpc.CallOption) (*ResolveResponse, error)
}

type resolverClient struct {
	cc *grpc.ClientConn
}

func NewResolverClient(cc *grpc.ClientConn) ResolverClient {
	return &resolverClient{cc}
}

func (c *resolverClient) Resolve(ctx context.Context, in *ResolveRequest, opts ...grpc.CallOption) (*ResolveResponse, error) {
	out := new(ResolveResponse)
	err := c.cc.Invoke(ctx, "/rpc.Resolver/Resolve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResolverServer is the server API for Resolver service.
type ResolverServer interface {
	Resolve(context.Context, *ResolveRequest) (*ResolveResponse, error)
}

func RegisterResolverServer(s *grpc.Server, srv ResolverServer) {
	s.RegisterService(&_Resolver_serviceDesc, srv)
}

func _Resolver_Resolve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResolveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResolverServer).Resolve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Resolver/Resolve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResolverServer).Resolve(ctx, req.(*ResolveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Resolver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Resolver",
	HandlerType: (*ResolverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Resolve",
			Handler:    _Resolver_Resolve_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "resolver.proto",
}
